{"version":3,"sources":["pages/serach/Search.css.js","pages/serach/Search.js","pages/serach/SearchModal.css.js","components/ModalTitle.css.js","components/ModalIcon.js","components/ModalTitle.js","components/ModalProgressiveBar.css.js","components/ModalProgressiveBar.js","components/ModalCheckbox.js","pages/serach/SearchModal.js","deviceId.js","pages/serach/Modal.css.js","pages/serach/Modal.js","App.js","serviceWorker.js","index.js"],"names":["SearchButton","styled","Link","SearchInput","input","SearchFormControl","div","Search","useState","ean","setEan","type","value","onChange","e","target","placeholder","to","Wrapper","BigSection","SmallSection","Section","WrapperTitle","Title","p","SearchModalIcon","Icon","onClick","style","color","fontSize","cursor","SearchModalTitle","title","close","ModalIcon","FaTimesCircle","RiFileCopyLine","navigator","clipboard","writeText","window","location","ProgressBarStyled","size","progress","keyframes","ProgressBarStyledFill","now","ProgressBarStyledLabel","label","ModalProgressiveBar","suffix","ModalCheckbox","dataTestId","htmlFor","data-testid","disabled","checked","SearchModal","data","ModalTitle","name","plScore","margin","plCapital","marginTop","plWorkers","plRnD","plRegistered","plNotGlobEnt","description","randomDeviceId","len","result","i","asciiNumber","Math","floor","random","String","fromCharCode","randomString","getCurrentDeviceId","deviceId","localStorage","getItem","setItem","filling","Background","translate","Content","ModalPage","setData","useParams","isRedirect","setRedirect","closeModal","useEffect","a","length","axios","get","params","code","device_id","resp","console","log","api","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9be8520f.chunk.js","sourcesContent":["import styled from \"styled-components\"\nimport { Link } from \"react-router-dom\";\n\nexport const SearchButton = styled(Link)`\n    color: #d8002f;\n    float: left;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    right: 20px;\n    cursor: pointer;\n`\nexport const SearchInput = styled.input`\n    width: 100%;\n    padding-left: 15px;\n    border: none;\n    color: #495057;\n    padding-right: 70px;\n`\n\nexport const SearchFormControl = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-evenly;\n    padding: 2.5px 0;\n    width: 50%;\n    border: solid 4px #d8002f;\n    font-size: 32px;\n    margin: 0 auto;\n    margin-bottom: 1rem;\n    position: relative;\n`","import React, { useState } from 'react'\nimport { SearchButton, SearchInput, SearchFormControl } from './Search.css'\nimport { ImSearch } from 'react-icons/im'\n\nconst Search = () => {\n  const [ean, setEan] = useState(\"\");\n\n  return (\n    <SearchFormControl>\n      <SearchInput\n        type='text'\n        value={ean}\n        onChange={e => setEan(e.target.value)}\n        placeholder=\"Wpisz tutaj kod ean\"\n      />\n      <SearchButton to={`/${ean}`}>\n        <ImSearch />\n      </SearchButton>\n    </SearchFormControl>\n  )\n}\n\nexport default Search;","import styled from \"styled-components\"\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nexport const BigSection = styled.div`\n  padding: 0 30px\n`\n\nexport const SmallSection = styled.div`\n  padding: 0 45px\n`\n\nexport const Section = styled.div`\n  margin-top: 10px;\n`","import styled from \"styled-components\"\n\nexport const WrapperTitle = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  margin-bottom: 10px;\n`\n\nexport const Title = styled.p`\n  width: 100%;\n  fontSize: 20px;\n  padding: 0 10px; \n  margin: 0;\n`","import React from 'react'\n\nconst SearchModalIcon = ({ Icon, onClick }) => {\n  return (\n    <Icon\n      onClick={onClick}\n      style={{ color: '#dc3545', fontSize: 30, cursor: 'pointer' }}\n    />\n  )\n}\n\nexport default SearchModalIcon;","import React from 'react'\nimport { WrapperTitle, Title } from './ModalTitle.css'\nimport ModalIcon from './ModalIcon'\nimport { FaTimesCircle } from 'react-icons/fa'\nimport { RiFileCopyLine } from 'react-icons/ri'\n\nconst SearchModalTitle = ({ title, close }) => {\n\n  const handleClick = () => {\n    navigator.clipboard.writeText(window.location)\n  }\n\n  return (\n    <WrapperTitle>\n      <ModalIcon Icon={FaTimesCircle} onClick={close} />\n      <Title>\n        {title}\n      </Title>\n      <ModalIcon Icon={RiFileCopyLine} onClick={handleClick} />\n    </WrapperTitle>\n  )\n}\n\nexport default SearchModalTitle;","import styled, {keyframes} from \"styled-components\"\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  position: relative;\n`\n\nexport const ProgressBarStyled = styled.div`\n    height: ${({size}) => size==='big' ? '30px' : '25px'};\n    width: 100%;\n    background-color: #6c757d;\n`\n\nconst progress = keyframes`\n  from{width: 0;}\n`\n\nexport const ProgressBarStyledFill = styled.div`\n    ${({now})=>\n      `width: ${now ? now : 0}%;`\n    }\n    animation: ${progress} 0.4s linear;\n    height: 100%;\n    background-color: #d8002f;\n`\n\nexport const ProgressBarStyledLabel = styled.label`\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  right: 10px;\n  top: 0;\n  bottom: 0;\n  color: white;\n`","import React from 'react'\nimport { ProgressBarStyled, ProgressBarStyledLabel, Wrapper, ProgressBarStyledFill } from './ModalProgressiveBar.css'\n\nconst ModalProgressiveBar = ({now, suffix, size}) => {\n  return (\n    <Wrapper>\n      <ProgressBarStyledLabel>{`${now} ${suffix}`}</ProgressBarStyledLabel>\n      <ProgressBarStyled size={size}>\n        <ProgressBarStyledFill now={now}/>\n      </ProgressBarStyled>\n    </Wrapper>\n  )\n}\n\nexport default ModalProgressiveBar","import React from 'react'\n\nconst ModalCheckbox = ({ dataTestId, value, title }) => {\n  return (\n    <p>\n      <input htmlFor={dataTestId} data-testid={dataTestId} type='checkbox' disabled checked={value === 100} />\n      <label htmlFor={dataTestId}>{title}</label>\n    </p>\n  )\n}\n\nexport default ModalCheckbox","import React from 'react'\nimport { Wrapper, BigSection, SmallSection, Section } from './SearchModal.css'\nimport ModalTitle from './../../components/ModalTitle'\nimport ModalProgressiveBar from './../../components/ModalProgressiveBar'\nimport ModalCheckbox from './../../components/ModalCheckbox'\n\nconst SearchModal = ({ data, close }) => {\n\n    return (\n        <Wrapper>\n            <ModalTitle\n                title={data.name}\n                close={close}\n            />\n            {data.name !== \"Nieprawidłowy kod\" &&\n                <>\n                    <BigSection>\n                        <ModalProgressiveBar\n                            now={data.plScore}\n                            suffix={'pkt'}\n                            size='big'\n                        />\n                    </BigSection>\n                    <SmallSection>\n                        <Section>\n                            <p style={{ margin: '0 0 8px 0' }}>udział polskiego kapitału</p>\n                            <ModalProgressiveBar\n                                now={data.plCapital}\n                                suffix={'%'}\n                                size='small'\n                            />\n                        </Section>\n                        <div style={{marginTop: 20}}>\n                            <Section>\n                                <ModalCheckbox\n                                    dataTestId=\"pl-workers\"\n                                    value={data.plWorkers}\n                                    title=\"produkuje w Polsce\"\n                                />\n                            </Section>\n                            <Section>\n                                <ModalCheckbox\n                                    dataTestId=\"pl-rnd\"\n                                    value={data.plRnD}\n                                    title=\"prowadzi badania i rozwój w Polsce\"\n                                />\n                            </Section>\n                            <Section>\n                                <ModalCheckbox\n                                    dataTestId=\"pl-registered\"\n                                    value={data.plRegistered}\n                                    title=\"zajerestrowana w Polsce\"\n                                />\n                            </Section>\n                            <Section>\n                                <ModalCheckbox\n                                    dataTestId=\"pl-not-glob-ent\"\n                                    value={data.plNotGlobEnt}\n                                    title=\"nie jest częścią zagranicznego koncernu\"\n                                />\n                            </Section>\n                        </div>\n                        {/* {data.is_friend && (\n                            <Section>\n                                To jest przyjaciel Poli\n                            </Section>\n                        )} */}\n                        <Section>\n                            {data.description}\n                        </Section>\n                    </SmallSection>\n                </>\n            }\n        </Wrapper>\n    )\n}\n\nexport default SearchModal","export const randomString = (len) => {\n    let result = \"\"\n    for (let i = 0; i < len; i++) {\n        let asciiNumber = Math.floor(Math.random() * 35);\n        if (asciiNumber >= 0 && asciiNumber <= 9) {\n            result = result + String.fromCharCode(asciiNumber + 48)\n        } else {\n            result = result + String.fromCharCode(asciiNumber + 87)\n        }\n    }\n    return result\n}\n\nexport const randomDeviceId = () => {\n    return `WEB-${randomString(32)}`\n}\n\nexport const getCurrentDeviceId = () => {\n    let deviceId = localStorage.getItem('DEVICE_ID')\n    if (deviceId == null) {\n        deviceId= randomDeviceId()\n        localStorage.setItem('DEVICE_ID', deviceId);\n    }\n    return deviceId;\n}","import styled, { keyframes } from \"styled-components\"\n\nexport const filling = keyframes`\n  from {\n    background-color: rgba(0, 0, 0, 0);\n  }\n\n  to {\n    background-color: rgba(0, 0, 0, 0.5);\n  }\n`\n\nexport const Background = styled.div`\n  top: 0;\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  animation: ${filling} 0.3s linear;\n  background-color: rgba(0, 0, 0, 0.5);\n`\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  z-index: -1;\n`\n\nexport const translate = keyframes`\n  from {\n    transform: translate(0, -40%);\n  }\n\n  to {\n    transform: translate(0, 0);\n  }\n`\n\nexport const Content = styled.div`\n  width: 50%;\n  padding: 16px;\n  margin: 30px auto;\n  background-color: white;\n  border-radius: 5px;\n  box-shadow: 10px 10px 15px rgba(0, 0, 0, 0.2);\n  animation: ${translate} 0.3s linear;\n`","import React, { useState, useEffect } from 'react'\nimport SearchModal from './SearchModal';\nimport axios from 'axios'\nimport { getCurrentDeviceId } from \"../../deviceId\";\nimport { Background, Content, Wrapper } from \"./Modal.css\";\nimport { Redirect, useParams } from \"react-router-dom\";\n\nconst ModalPage = () => {\n  const [data, setData] = useState('');\n  const { ean } = useParams();\n\n  const [isRedirect, setRedirect] = useState(false)\n\n  const closeModal = () => {\n    setRedirect(true)\n  }\n\n  useEffect(() => {\n    async function api() {\n      if (ean && ean.length > 0) {\n        try {\n          const resp = await axios.get('https://www.pola-app.pl/a/v3/get_by_code',\n            {\n              params: {\n                code: ean,\n                device_id: getCurrentDeviceId()\n              }\n            })\n          setData(resp.data)\n        } catch (err) {\n          console.log(err)\n        }\n      }\n    }\n    api()\n  }, [ean]);\n\n  return (\n    <>\n      { isRedirect ?\n        <Redirect to='/' /> :\n        <>\n          <Background>\n            <Wrapper onClick={closeModal} />\n            <Content>\n              <SearchModal\n                data={data}\n                close={closeModal}\n              />\n            </Content>\n          </Background>\n\n        </>\n      }\n    </>\n  )\n}\n\nexport default ModalPage;","import React from 'react';\nimport Search from './pages/serach/Search'\nimport ModalPage from './pages/serach/Modal'\nimport {\n  HashRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div>\n      <HashRouter>\n        <Search />\n        <Switch>\n          <Route exact path=\"/:ean\" component={ModalPage} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'development') {\n    const { worker } = require('./mocks/browser')\n    worker.start()\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
