{"version":3,"sources":["pages/serach/Search.css.js","pages/serach/Search.js","pages/serach/SearchModal.css.js","components/ModalTitle.css.js","components/ModalIcon.js","components/ModalTitle.js","components/ModalProgressiveBar.css.js","components/ModalProgressiveBar.js","components/ModalCheckbox.css.js","components/ModalCheckbox.js","pages/serach/SearchModal.js","deviceId.js","pages/serach/Modal.css.js","pages/serach/Modal.js","App.css.js","App.js","serviceWorker.js","index.js"],"names":["Wrapper","styled","div","Text","p","SearchButton","button","SearchInput","input","SearchFormControl","form","Search","useState","ean","setEan","history","useHistory","href","onSubmit","e","preventDefault","console","log","length","push","replace","type","value","onChange","target","placeholder","BigSection","SmallSection","Section","WrapperTitle","Title","toolTip","keyframes","SearchModalIcon","Icon","onClick","style","color","fontSize","cursor","SearchModalTitle","title","close","ModalIcon","FaTimesCircle","position","RiFileCopyLine","navigator","clipboard","writeText","window","location","ProgressBarStyled","size","progress","ProgressBarStyledFill","now","ProgressBarStyledLabel","label","ModalProgressiveBar","suffix","ModalCheckbox","dataTestId","htmlFor","data-testid","disabled","checked","SearchModal","data","ModalTitle","name","plScore","margin","plCapital","marginTop","plWorkers","plRnD","plRegistered","plNotGlobEnt","description","randomDeviceId","len","result","i","asciiNumber","Math","floor","random","String","fromCharCode","randomString","getCurrentDeviceId","deviceId","localStorage","getItem","setItem","filling","Background","translate","Content","ModalPage","setData","useParams","isRedirect","setRedirect","closeModal","useEffect","a","axios","get","params","code","device_id","resp","api","to","AppStyled","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.28cfc6a6.chunk.js","sourcesContent":["import styled from \"styled-components\"\n\nexport const Wrapper = styled.div`\n    max-width: 600px;\n    margin: 0 auto;\n`\n\nexport const Text = styled.p`\n    font-size: 24px;\n    text-align: center;\n\n    a{\n        color: blue;\n        text-decoration: none;\n    }\n`\n\nexport const SearchButton = styled.button`\n    color: #d8002f;\n    float: left;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    right: 20px;\n    cursor: pointer;\n    border: none;\n    background: none;\n    font-size: 32px;\n`\nexport const SearchInput = styled.input`\n    width: 100%;\n    padding-left: 15px;\n    border: none;\n    color: #495057;\n    padding-right: 70px;\n    font-size: 32px;\n`\n\nexport const SearchFormControl = styled.form`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-evenly;\n    width: 100%;\n    border: solid 4px #d8002f;\n    margin: 0 auto;\n    margin-bottom: 1rem;\n    position: relative;\n    padding: 5px 0;\n`\n","import React, { useState } from 'react'\nimport { SearchButton, SearchInput, SearchFormControl, Wrapper, Text } from './Search.css'\nimport { ImSearch } from 'react-icons/im'\nimport { useHistory } from \"react-router-dom\";\n\nconst Search = () => {\n  const [ean, setEan] = useState(\"\");\n  let history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(ean.length)\n    if(ean.length > 0){\n      history.push(`/ean/${ean.replace(/\\s/g, '')}`);\n    }\n  }\n\n  return (\n    <Wrapper>\n      <Text>\n        Sprawdź informacje o produkcie.<br />\n        Nie wiesz, jaki kod ma Twój produkt? <a href='https://pl.openfoodfacts.org/'>Sprawdź w bazie kodów</a>\n      </Text>\n      <SearchFormControl onSubmit={handleSubmit}>\n        <SearchInput\n          type='text'\n          value={ean}\n          onChange={e => setEan(e.target.value)}\n          placeholder=\"Wpisz tutaj kod kreskowy (EAN)\"\n        />\n        <SearchButton type='submit'>\n          <ImSearch />\n        </SearchButton>\n      </SearchFormControl>\n    </Wrapper>\n  )\n}\n\nexport default Search;","import styled from \"styled-components\"\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  overflow: auto;\n  max-height: 80vh;\n`\n\nexport const BigSection = styled.div`\n  padding: 0 30px;\n\n  @media only screen and (max-width: 500px) {\n    padding: 0;\n  }\n`\n\nexport const SmallSection = styled.div`\n  padding: 0 45px;\n\n  @media only screen and (max-width: 500px) {\n    padding: 0 10px;\n  }\n`\n\nexport const Section = styled.div`\n  margin-top: 10px;\n`","import styled, {keyframes} from \"styled-components\"\n\nexport const WrapperTitle = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  margin-bottom: 10px;\n`\n\nexport const Title = styled.p`\n  width: 100%;\n  fontSize: 20px;\n  padding: 0 10px; \n  margin: 0;\n`\n\nconst toolTip = keyframes`\n  0%{\n    opacity: 0;\n  }\n  50%{\n    opacity: 1;\n  }\n  100%{\n    opacity: 0;\n  }\n`\n\nexport const ToolTip = styled.div`\n    position: absolute;\n    background-color: #253037;\n    color: white;\n    transform: translate(50%, 100%);\n    padding: 5px 20px;\n    right: 15px;\n    z-index: 1;\n    white-space: nowrap;\n    border-radius: 10px;\n    animation: ${toolTip} 1s linear;\n`","import React from 'react'\n\nconst SearchModalIcon = ({ Icon, onClick }) => {\n  return (\n    <Icon\n      onClick={onClick}\n      style={{ color: '#dc3545', fontSize: 30, cursor: 'pointer' }}\n    />\n  )\n}\n\nexport default SearchModalIcon;","import React from 'react'\nimport { WrapperTitle, Title } from './ModalTitle.css'\nimport ModalIcon from './ModalIcon'\nimport { FaTimesCircle } from 'react-icons/fa'\nimport { RiFileCopyLine } from 'react-icons/ri'\n\nconst SearchModalTitle = ({ title, close }) => {\n  // const [toolTipOpen, isToolTipOpen] = useState(false)\n\n  const handleClick = () => {\n    navigator.clipboard.writeText(window.location);\n    // isToolTipOpen(true);\n  }\n\n  return (\n    <WrapperTitle>\n      <ModalIcon Icon={FaTimesCircle} onClick={close} />\n      <Title>\n        {title}\n      </Title>\n      <div style={{ position: 'relative' }}>\n        {/* {toolTipOpen && <ToolTip>skopiowałeś link</ToolTip>} */}\n        <ModalIcon Icon={RiFileCopyLine} onClick={handleClick} />\n      </div>\n    </WrapperTitle>\n  )\n}\n\nexport default SearchModalTitle;\n","import styled, {keyframes} from \"styled-components\"\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  position: relative;\n`\n\nexport const ProgressBarStyled = styled.div`\n    height: ${({size}) => size==='big' ? '30px' : '25px'};\n    width: 100%;\n    background-color: #6c757d;\n`\n\nconst progress = keyframes`\n  from{width: 0;}\n`\n\nexport const ProgressBarStyledFill = styled.div`\n    ${({now})=>\n      `width: ${now ? now : 0}%;`\n    }\n    animation: ${progress} 0.4s linear;\n    height: 100%;\n    background-color: #d8002f;\n`\n\nexport const ProgressBarStyledLabel = styled.label`\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  right: 10px;\n  top: 0;\n  bottom: 0;\n  color: white;\n  display: table-cell;\n  vertical-align: middle;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`","import React from 'react'\nimport { ProgressBarStyled, ProgressBarStyledLabel, Wrapper, ProgressBarStyledFill } from './ModalProgressiveBar.css'\n\nconst ModalProgressiveBar = ({now, suffix, size}) => {\n  return (\n    <Wrapper>\n      <ProgressBarStyledLabel>{`${now} ${suffix}`}</ProgressBarStyledLabel>\n      <ProgressBarStyled size={size}>\n        <ProgressBarStyledFill now={now}/>\n      </ProgressBarStyled>\n    </Wrapper>\n  )\n}\n\nexport default ModalProgressiveBar","import styled from \"styled-components\"\n\nexport const Wrapper = styled.p`\n  margin: 0;\n  padding: 0.2em 0;\n\n  [type=\"checkbox\"]:not(:checked),\n  [type=\"checkbox\"]:checked {\n    position: absolute;\n    left: -9999px;\n  }\n  [type=\"checkbox\"]:not(:checked) + label,\n  [type=\"checkbox\"]:checked + label {\n    position: relative;\n    padding-left: 2.2em;\n    cursor: pointer;\n  }\n\n  [type=\"checkbox\"]:not(:checked) + label:before,\n  [type=\"checkbox\"]:checked + label:before {\n    content: \"\";\n    position: absolute;\n    left: 0; \n    top: 0;\n    width: 1.5em; \n    height: 1.5em;\n    border: 2px solid #ccc;\n    background: #fff;\n    border-radius: 10%;\n  }\n\n  [type=\"checkbox\"]:not(:checked) + label:after,\n  [type=\"checkbox\"]:checked + label:after {\n    content: \"✓\";\n    position: absolute;\n    top: .25em;\n    left: .22em;\n    font-size: 1.3em;\n    line-height: 0.8;\n    color: #09ad7e;\n    transition: all .2s;\n    font-family: 'Lucida Sans Unicode', 'Arial Unicode MS', Arial;\n  }\n\n  [type=\"checkbox\"]:not(:checked) + label:after {\n    opacity: 0;\n    transform: scale(0);\n  }\n  [type=\"checkbox\"]:checked + label:after {\n    opacity: 1;\n    transform: scale(1);\n  }\n  \n  [type=\"checkbox\"]:disabled:not(:checked) + label:before,\n  [type=\"checkbox\"]:disabled:checked + label:before {\n    box-shadow: none;\n    border-color: #6c757d;\n    background-color: #6c757d;\n  }\n  [type=\"checkbox\"]:disabled:checked + label:after {\n    color: white;\n  }\n  [type=\"checkbox\"] + label {\n    display: block;\n  }\n  [type=\"checkbox\"]:disabled + label {\n    color: black;\n  }\n\n`\n","import React from 'react'\n\nimport { Wrapper } from './ModalCheckbox.css'\n\nconst ModalCheckbox = ({ dataTestId, value, title }) => {\n  return (\n    <Wrapper>\n      <input htmlFor={dataTestId} data-testid={dataTestId} type='checkbox' disabled checked={value === 100} />\n      <label htmlFor={dataTestId}>{title}</label>\n    </Wrapper>\n  )\n}\n\nexport default ModalCheckbox","import React from 'react'\nimport { Wrapper, BigSection, SmallSection, Section } from './SearchModal.css'\nimport ModalTitle from './../../components/ModalTitle'\nimport ModalProgressiveBar from './../../components/ModalProgressiveBar'\nimport ModalCheckbox from './../../components/ModalCheckbox'\n\nconst SearchModal = ({ data, close }) => {\n\n    return (\n        <Wrapper>\n            <ModalTitle\n                title={data.name}\n                close={close}\n            />\n            {data.name !== \"Nieprawidłowy kod\" &&\n                <>\n                    <BigSection>\n                        <ModalProgressiveBar\n                            now={data.plScore}\n                            suffix={'pkt'}\n                            size='big'\n                        />\n                    </BigSection>\n                    <SmallSection>\n                        <Section>\n                            <p style={{ margin: '0 0 8px 0' }}>udział polskiego kapitału</p>\n                            <ModalProgressiveBar\n                                now={data.plCapital}\n                                suffix={'%'}\n                                size='small'\n                            />\n                        </Section>\n                        <div style={{marginTop: 20}}>\n                            <Section>\n                                <ModalCheckbox\n                                    dataTestId=\"pl-workers\"\n                                    value={data.plWorkers}\n                                    title=\"produkuje w Polsce\"\n                                />\n                            </Section>\n                            <Section>\n                                <ModalCheckbox\n                                    dataTestId=\"pl-rnd\"\n                                    value={data.plRnD}\n                                    title=\"prowadzi badania i rozwój w Polsce\"\n                                />\n                            </Section>\n                            <Section>\n                                <ModalCheckbox\n                                    dataTestId=\"pl-registered\"\n                                    value={data.plRegistered}\n                                    title=\"zajerestrowana w Polsce\"\n                                />\n                            </Section>\n                            <Section>\n                                <ModalCheckbox\n                                    dataTestId=\"pl-not-glob-ent\"\n                                    value={data.plNotGlobEnt}\n                                    title=\"nie jest częścią zagranicznego koncernu\"\n                                />\n                            </Section>\n                        </div>\n                        {/* {data.is_friend && (\n                            <Section>\n                                To jest przyjaciel Poli\n                            </Section>\n                        )} */}\n                        <Section>\n                            {data.description}\n                        </Section>\n                    </SmallSection>\n                </>\n            }\n        </Wrapper>\n    )\n}\n\nexport default SearchModal","export const randomString = (len) => {\n    let result = \"\"\n    for (let i = 0; i < len; i++) {\n        let asciiNumber = Math.floor(Math.random() * 35);\n        if (asciiNumber >= 0 && asciiNumber <= 9) {\n            result = result + String.fromCharCode(asciiNumber + 48)\n        } else {\n            result = result + String.fromCharCode(asciiNumber + 87)\n        }\n    }\n    return result\n}\n\nexport const randomDeviceId = () => {\n    return `WEB-${randomString(32)}`\n}\n\nexport const getCurrentDeviceId = () => {\n    let deviceId = localStorage.getItem('DEVICE_ID')\n    if (deviceId == null) {\n        deviceId= randomDeviceId()\n        localStorage.setItem('DEVICE_ID', deviceId);\n    }\n    return deviceId;\n}","import styled, { keyframes } from \"styled-components\"\n\nexport const filling = keyframes`\n  from {\n    background-color: rgba(0, 0, 0, 0);\n  }\n\n  to {\n    background-color: rgba(0, 0, 0, 0.5);\n  }\n`\n\nexport const Background = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  animation: ${filling} 0.3s linear;\n  background-color: rgba(0, 0, 0, 0.5);\n`\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  z-index: -1;\n`\n\nexport const translate = keyframes`\n  from {\n    transform: translate(0, -40%);\n  }\n\n  to {\n    transform: translate(0, 0);\n  }\n`\n\nexport const Content = styled.div`\n  width: 50%;\n  padding: 16px;\n  margin: 30px auto;\n  background-color: white;\n  border-radius: 5px;\n  box-shadow: 10px 10px 15px rgba(0, 0, 0, 0.2);\n  animation: ${translate} 0.3s linear;\n\n  @media only screen and (max-width: 992px) {\n    width: 85%;\n  }\n`","import React, { useState, useEffect } from 'react'\nimport SearchModal from './SearchModal';\nimport axios from 'axios'\nimport { getCurrentDeviceId } from \"../../deviceId\";\nimport { Background, Content, Wrapper } from \"./Modal.css\";\nimport { Redirect, useParams } from \"react-router-dom\";\n\nconst ModalPage = () => {\n  const [data, setData] = useState('');\n  const { ean } = useParams();\n\n  const [isRedirect, setRedirect] = useState(false)\n\n  const closeModal = () => {\n    setRedirect(true)\n  }\n\n  useEffect(() => {\n    async function api() {\n      try {\n        const resp = await axios.get('https://www.pola-app.pl/a/v3/get_by_code',\n          {\n            params: {\n              code: ean,\n              device_id: getCurrentDeviceId()\n            }\n          })\n        setData(resp.data)\n      } catch (err) {\n        console.log(err)\n      }\n    }\n    api()\n  }, [ean]);\n\n  return (\n    <>\n      { isRedirect ?\n        <Redirect to='/' /> :\n        <>\n          <Background>\n            <Wrapper onClick={closeModal} />\n            <Content>\n              <SearchModal\n                data={data}\n                close={closeModal}\n              />\n            </Content>\n          </Background>\n\n        </>\n      }\n    </>\n  )\n}\n\nexport default ModalPage;","import styled from \"styled-components\"\n\nexport const AppStyled = styled.div`\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n`","import React from 'react';\nimport Search from './pages/serach/Search'\nimport ModalPage from './pages/serach/Modal'\nimport {\n  HashRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { AppStyled } from './App.css'\n\n\nfunction App() {\n  return (\n    <AppStyled>\n      <HashRouter>\n        <Search />\n        <Switch>\n          <Route exact path=\"/ean/:ean\" component={ModalPage} />\n        </Switch>\n      </HashRouter>\n    </AppStyled>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'development') {\n    const { worker } = require('./mocks/browser')\n    worker.start()\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
